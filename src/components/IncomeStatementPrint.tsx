"use client";

import React, { useRef } from 'react';
import { useReactToPrint } from 'react-to-print';
import Image from "next/image";

interface ReportData {
  school: {
    name: string;
    address: string;
    phone: string;
  };
  incomeAccountTotals: any[];
  expenseAccountTotals: any[];
  totalIncome: number;
  totalExpenses: number;
  netIncome: number;
  startDate: string;
  endDate: string;
}

interface Props {
  reportData: ReportData;
}

const PrintableIncomeStatement = React.forwardRef<HTMLDivElement, { data: ReportData }>((props, ref) => {
  const { data } = props;
  
  return (
    <div ref={ref} className="p-8 bg-white">
      {/* REPORT HEADER */}
      <div className="text-center mb-8">
        <h1 className="text-2xl font-bold text-gray-900">{data.school.name}</h1>
        <p className="text-gray-600">{data.school.address}</p>
        <p className="text-gray-600">{data.school.phone}</p>
        <h2 className="text-xl font-semibold mt-4 text-gray-800">Income Statement</h2>
        <p className="text-gray-600">
          For the period from {new Intl.DateTimeFormat("en-GB").format(new Date(data.startDate))} to{" "}
          {new Intl.DateTimeFormat("en-GB").format(new Date(data.endDate))}
        </p>
      </div>

      {/* INCOME SECTION */}
      <div className="mb-8">
        <h3 className="text-lg font-semibold text-green-700 mb-4 border-b border-gray-200 pb-2">
          INCOME
        </h3>
        <div className="space-y-2">
          {data.incomeAccountTotals.map((account) => (
            <div key={account.id} className="flex justify-between items-center py-1">
              <div className="flex items-center gap-2">
                <span className="font-mono text-sm text-gray-500">{account.code}</span>
                <span>{account.name}</span>
              </div>
              <span className="font-medium">GHS {account.total.toLocaleString()}</span>
            </div>
          ))}
          <div className="border-t border-gray-300 pt-2 mt-4">
            <div className="flex justify-between items-center font-semibold text-lg">
              <span>Total Income</span>
              <span className="text-green-600">GHS {data.totalIncome.toLocaleString()}</span>
            </div>
          </div>
        </div>
      </div>

      {/* EXPENSES SECTION */}
      <div className="mb-8">
        <h3 className="text-lg font-semibold text-red-700 mb-4 border-b border-gray-200 pb-2">
          EXPENSES
        </h3>
        <div className="space-y-2">
          {data.expenseAccountTotals.map((account) => (
            <div key={account.id} className="flex justify-between items-center py-1">
              <div className="flex items-center gap-2">
                <span className="font-mono text-sm text-gray-500">{account.code}</span>
                <span>{account.name}</span>
              </div>
              <span className="font-medium">GHS {account.total.toLocaleString()}</span>
            </div>
          ))}
          <div className="border-t border-gray-300 pt-2 mt-4">
            <div className="flex justify-between items-center font-semibold text-lg">
              <span>Total Expenses</span>
              <span className="text-red-600">GHS {data.totalExpenses.toLocaleString()}</span>
            </div>
          </div>
        </div>
      </div>

      {/* NET INCOME */}
      <div className="border-t-2 border-gray-400 pt-4">
        <div className="flex justify-between items-center font-bold text-xl">
          <span>NET INCOME</span>
          <span className={`${data.netIncome >= 0 ? "text-green-600" : "text-red-600"}`}>
            GHS {data.netIncome.toLocaleString()}
          </span>
        </div>
      </div>

      {/* REPORT FOOTER */}
      <div className="mt-12 pt-8 border-t border-gray-200 text-center text-sm text-gray-500">
        <p>Generated on {new Intl.DateTimeFormat("en-GB").format(new Date())}</p>
        <p>This report was automatically generated by the School Management System</p>
      </div>
    </div>
  );
});

PrintableIncomeStatement.displayName = 'PrintableIncomeStatement';

const IncomeStatementPrint: React.FC<Props> = ({ reportData }) => {
  const componentRef = useRef<HTMLDivElement>(null);

  const handlePrint = useReactToPrint({
    content: () => componentRef.current,
    documentTitle: `Income_Statement_${reportData.startDate}_to_${reportData.endDate}`,
  });

  return (
    <>
      <button 
        onClick={handlePrint}
        className="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 flex items-center gap-2"
      >
        <Image src="/result.png" alt="" width={16} height={16} />
        Export PDF
      </button>
      <div style={{ display: 'none' }}>
        <PrintableIncomeStatement ref={componentRef} data={reportData} />
      </div>
    </>
  );
};

export default IncomeStatementPrint;